//Question: https://leetcode.com/discuss/interview-question/538568/google-onsite-min-operations-to-reduce-number-to-1

//Code:
class Solution {
public:
    /* RECURSION
    _________________
    int minoperations(int n){
      if (n==1)  return 0;
      int x=INT_MAX, y=INT_MAX, z=INT_MAX;
      if (n%2 == 0)  x = minoperations(n/2);
      if (n%3 == 0)  y = minoperations(n/3);
      z = minoperations(n-1);
      return 1 + min(x,min(y,z));
    }*/

  /*DP
______________________*/
    int minoperations(int n,vector<int>dp){
      if(n<2)  return 0;
      dp[2]=1;
      dp[3]=1;
      id(dp[n])  return dp[n];
      int x=INT_MAX, y=INT_MAX, z=INT_MAX;
      if (n%2 == 0)  x = minoperations(n/2, dp);
      if (n%3 == 0)  y = minoperations(n/3, dp);
      z = minoperations(n-1, dp);
      dp[n] = 1+ min(x, min(y,z));
  }

//Approach:  multiple approaches
