//Question: https://www.interviewbit.com/problems/largest-distance-between-nodes-of-a-tree/

//Code:
int dis(int node, vector<vector<int>> &adj, int &res){
    int h=0;
    for(auto x:adj[node]){
        int t=dis(x,adj,res);
        res=max(res,h+t);
        h=max(h,t);
    }
    return h+1;
}
int Solution::solve(vector<int> &A) {
    int res=0;
    vector<vector<int>> adj(A.size(),vector<int>(0));
    int root=-1;
    for(int i=0;i<A.size();i++){
        if(A[i]==-1){
            root=i;
            continue;
        }
        adj[A[i]].push_back(i);
    }
    dis(root,adj,res);
    return res;
}
//TC: O(E+N)

//Approach: finding and updating the maximum height found
