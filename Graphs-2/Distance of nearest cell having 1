//Question: https://www.geeksforgeeks.org/problems/distance-of-nearest-cell-having-1-1587115620/1

//Code:
class Solution 
{
    public:
    //Function to find distance of nearest 1 in the grid for each cell.
	vector<vector<int>>nearest(vector<vector<int>>grid)
	{
	    // Code here
	    int m=grid.size(),n=grid[0].size();
        queue<pair<pair<int, int>,int>>q;
        vector<vector<int>>adj(m,vector<int>(n,-1));
        vector<vector<int>>v(m,vector<int>(n,0));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    q.push({{i,j},0});
                    v[i][j]=1;
                }
                else    v[i][j] = 0;
            }
        }
        int delrow[] = {1, 0, -1, 0};
        int delcol[] = {0, 1, 0, -1};
        while (!q.empty()) {
            int row = q.front().first.first;
            int col = q.front().first.second;
            int steps = q.front().second;
            q.pop();
            adj[row][col] = steps;
            for (int i = 0; i < 4; i++) {
                int nrow = row + delrow[i];
                int ncol = col + delcol[i];
                if (nrow >= 0 && ncol >= 0 && ncol <n && nrow <m && v[nrow][ncol] == 0) {
                    q.push({{nrow, ncol}, steps + 1});
                    v[nrow][ncol] = 1;
                }
            }
        }
        return adj;
    }
};

//TC: O(M*N)

//Approach: BFS
