//Question: https://leetcode.com/problems/search-in-rotated-sorted-array/description/

//Code:
class Solution{
public:	
	int findKRotation(int arr[], int n) {
	    // code here
	    int low=0,high=n-1,mid;
        while(low<high){
            mid=(low+high)/2;
            if(arr[mid]>=arr[0])    low=mid+1;
            else    high=mid;
        }
        if(high==n-1 and arr[n-1]>arr[n-2])    return 0;
        else    return high;
	}
};

//TC: O(log N)

//Approach: Basic Binary Search
