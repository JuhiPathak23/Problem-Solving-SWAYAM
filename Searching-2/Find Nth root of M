//Question: https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/

//Code:
class Solution {
public:
    int NthRoot(int n, int m){
	    // Code here.
	    int low=1,high=m;
	    while(low<=high){
	        int mid=(low+high)/2;
	        if(pow(mid,n)==m)   return mid;
	        else if(m<pow(mid,n))   high=mid-1;
	        else    low=mid+1;
	    }
	    return -1;
	}   
};

//TC: O(n log m)

//Approach: Here I have used binary search approach as well.
