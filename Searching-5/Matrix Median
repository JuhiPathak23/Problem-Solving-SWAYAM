//Question: https://www.interviewbit.com/problems/matrix-median/

//Code:
int Solution::findMedian(vector<vector<int> > &matrix) {
    int m=matrix.size(),n=matrix[0].size();
    int x=(m*n +1)/2;
        int low=INT_MAX;
        int high=INT_MIN;
        for(int i=0;i<m;i++){
            low=min(low,matrix[i][0]);
            high=max(high,matrix[i][n-1]);
        }
        while(low<high){
            int mid=(low+high)/2;
            int cnt=0;
            for(int i=0;i<m;i++)    cnt=cnt +upper_bound(matrix[i].begin(),matrix[i].end(),mid)-matrix[i].begin();
            if(cnt<x) low=mid+1;
            else high=mid;
        }
        return low;
}

//TC: O(m*log(n)*log(range))

//Approach: Binary Search
