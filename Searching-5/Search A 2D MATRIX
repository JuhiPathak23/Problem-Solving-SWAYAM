//Question: https://leetcode.com/problems/search-a-2d-matrix/description/

//Code:
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.empty() || matrix[0].empty()) return false;
        int m=matrix.size(),n=matrix[0].size();
        int low=0,high=m*n -1;
        while(low<=high){
            int mid=(low+high)/2;
            int val=matrix[mid/n][mid%n];
            if(val==target) return true;
            else if(val<target) low=mid+1;
            else    high=mid-1;
        }
        return false;
    }
};
//TC: O(log(m*n)))

//Approach: Binary Search
