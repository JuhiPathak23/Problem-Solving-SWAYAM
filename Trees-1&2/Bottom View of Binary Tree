//Question: https://www.geeksforgeeks.org/bottom-view-binary-tree/

//Code:
class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        vector<int>res;
        if(!root)   return res;
        map<int,int>mp;
        queue<pair<Node *,int>>q;
        q.push({root,0});
        while(!q.empty()){
            auto cur=q.front();
            q.pop();
            Node *n=cur.first;
            int hd=cur.second;
            mp[hd]=n->data;
            if(n->left) q.push({n->left,hd-1});
            if(n->right)    q.push({n->right,hd+1});
        }
        for(auto x:mp)  res.push_back(x.second);
        return res;
    }
};

//TC: O(n*log n)

//Approach: BFS
