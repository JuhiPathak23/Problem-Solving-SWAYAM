//Question: https://leetcode.com/problems/serialize-and-deserialize-binary-tree/description/

//Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Codec {
public:

    // Encodes a tree to a single string.
    string serialize(TreeNode* root) {
        return !root ? " null" : " " + to_string(root->val) + serialize(root->left) + serialize(root->right);
    }
    
    TreeNode* desersolve(istringstream& s){
        string t;
        s>>t;
        if(t=="null")   return NULL;
        TreeNode* n=new TreeNode(stoi(t));
        n->left=desersolve(s);
        n->right=desersolve(s);
        return n;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        istringstream s(data);
        return desersolve(s);
    }
};

// Your Codec object will be instantiated and called as such:
// Codec ser, deser;
// TreeNode* ans = deser.deserialize(ser.serialize(root));

//TC: O(n)

//Approach: DFS
