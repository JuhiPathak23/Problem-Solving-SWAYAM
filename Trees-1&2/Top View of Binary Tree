//Question: https://www.geeksforgeeks.org/problems/top-view-of-binary-tree/1

//Code:
/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int>res;
        map<int,int>mp;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            auto n=q.front();
            q.pop();
            auto v=n.first;
            int i=n.second;
            if(mp.find(i) == mp.end()) mp[i]=(v->data);
            if(v->left) q.push({v->left,i-1});
            if(v->right)    q.push({v->right,i+1});
        }
        for(auto x:mp)  res.push_back(x.second);
        return res;
    }
};

//TC: O(n*log n)

//Approach: BFS
