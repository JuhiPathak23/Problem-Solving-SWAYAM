//Question: https://leetcode.com/problems/binary-tree-right-side-view/

//Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,vector<int>&v,int l){
        if(root==NULL)  return;
        if(v.size()==l) v.push_back(root->val);
        solve(root->right,v,l+1);
        solve(root->left,v,l+1);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int>res;
        solve(root,res,0);
        return res;
    }
};

//TC: O(n)

//Approach: DFS
