//Question: https:https://leetcode.com/problems/path-sum-iii/

//Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res=0;
    void solve(TreeNode* root,int t){
        if(!root)   return;
        if(root->val==t)    res++;
        solve(root->left,t-root->val);
        solve(root->right,t-root->val);
    }
    int pathSum(TreeNode* root, int targetSum) {
        if(root){
            solve(root,targetSum);
            pathSum(root->left,targetSum);
            pathSum(root->right,targetSum);
        }
        return res;
    }
};

//TC: O(n*n)

//Approach: DFS
