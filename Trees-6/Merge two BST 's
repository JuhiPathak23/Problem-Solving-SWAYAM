//Question: https://www.geeksforgeeks.org/problems/merge-two-bst-s/1

//Code:
/*
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/
class Solution
{
    public:
    //Function to return a list of integers denoting the node 
    //values of both the BST in a sorted order.
    void inorder(Node *root,vector<int> &res){
        if(root==NULL) return;
        inorder(root->left,res);
        res.push_back(root->data);
        inorder(root->right,res);
    }
    vector<int> merge(Node *root1, Node *root2)
    {
       //Your code here
       vector<int>res;
       inorder(root1,res);
       inorder(root2,res);
       sort(res.begin(),res.end());
       return res;
    }
};

//TC: O((n1+n2)*(log(n1+n2)))

//Approach: Inorder traversal and sorting
